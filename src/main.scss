:root {
    --grid-gap: 20px;
    --card-width: 100%;
    --card-height: 140%;
    --card-border-radius: 5%;
    --card-stack-margin: 12%;
    --color-green: #3d9970;
    --color-red: #bd0534;
    --color-blue: #7d99d5;
    --color-black: #111;
    --color-gray: #aaa;
}

*,
*:before,
*:after {
    box-sizing: inherit;
}

html {
    box-sizing: border-box;
}

body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    background-color: var(--color-green);
    background-image: radial-gradient(transparent, rgba(black, 0.4));
}

a {
    color: inherit;

    &:hover {
        text-decoration: none;
    }
}

.solitaire {
    height: 100vh;
    padding: var(--grid-gap);
    display: grid;
    grid-gap: var(--grid-gap);
    grid-template-columns: repeat(7, 1fr);
    grid-template-rows: auto 1fr auto;
    grid-template-areas:
        "stock waste . foundation foundation foundation foundation"
        "tableau tableau tableau tableau tableau tableau tableau"
        "menu menu menu menu menu menu menu";

    @media (max-width: 768px) {
        grid-gap: calc(var(--grid-gap) / 2);
    }
}

.btn {
    display: inline-block;
    font-weight: 400;
    color: var(--color-black);
    text-align: center;
    vertical-align: middle;
    user-select: none;
    background-color: transparent;
    padding: .375rem .75rem;
    font-size: 1rem;
    line-height: 1.5;
    border-radius: .25rem;
    text-decoration: none;

    &:not([disabled]) {
        cursor: pointer;
    }
}

.menu {
    $color: #fff;

    grid-area: menu;
    display: grid;
    grid-gap: var(--grid-gap);
    grid-template-columns: repeat(2, auto) 1fr repeat(2, auto);
    color: rgba($color, 0.7);

    @media (max-width: 768px) {
        grid-gap: calc(var(--grid-gap) / 2);
    }

    .btn {
        color: inherit;
        border: 2px solid currentColor;
        font-weight: bold;

        &:hover,
        &:focus {
            color: #fff;
        }

        &[disabled] {
            color: rgba($color, 0.3);
        }
    }
}

.menu-text {
    font-size: 1rem;
    line-height: 1.5;
    padding: .375rem .75rem;
    border: 2px solid transparent;
}

.stock {
    grid-area: stock;
    position: relative;
}

.waste {
    grid-area: waste;
    position: relative;
}

.pile {
    position: relative;
    width: var(--card-width);
    height: 0;
    padding-bottom: var(--card-height);
    border: 2px solid rgba(#fff, 0.3);
    background-color: rgba(#000, 0.1);
    border-radius: var(--card-border-radius);
}

.foundation {
    grid-area: foundation;
    display: grid;
    grid-gap: var(--grid-gap);
    grid-template-columns: repeat(4, 1fr);

    @media (max-width: 768px) {
        grid-gap: calc(var(--grid-gap) / 2);
    }
}

.foundation-pile {
    position: relative;
}

.tableau {
    grid-area: tableau;
    display: grid;
    grid-gap: var(--grid-gap);
    grid-template-columns: repeat(7, 1fr);

    @media (max-width: 768px) {
        grid-gap: calc(var(--grid-gap) / 2);
    }
}

.tableau-pile {
    position: relative;
}

.card {
    cursor: pointer;
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    transition: transform 50ms ease-in-out;

    &:not(.is-revealed):not(.is-clickable) {
        cursor: not-allowed;
    }

    &.is-draggable {
        cursor: grab;
        transform: scale(1);
    }

    &.is-draggable.is-hover {
        transform: scale(1.04);
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);
    }

    &.is-dragging {
        opacity: 0.5;
    }

    >.card {
        top: var(--card-stack-margin);
        z-index: 2;
    }
}

.card-svg-front,
.card-svg-back {
    z-index: 1;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    pointer-events: none;
    border-radius: var(--card-border-radius);
    backface-visibility: hidden;
    transition: transform 300ms ease-in-out;
}

.card-svg-back {
    fill: var(--color-blue);
}

.card-svg-front,
.is-revealed .card-svg-back {
    transform: perspective(800px) rotateX(180deg);
}

.card-svg-back,
.is-revealed .card-svg-front {
    transform: perspective(800px) rotateX(0deg);
}
